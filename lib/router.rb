require 'controller'

class Router

#On veut qu'un "Routeur.new" lanc√© par app.rb, cr√©e automatique une instance "@controller"
  def initialize
  	@controller = Controller.new

  end

#rappelle_toi que l'on fait "Router.new.perform" dans app.rb => apr√®s initialize, on definit donc perform.
    def perform
  	    system "clear" or system "cls"
  	    puts "BIENVENUE DANS THE GOSSIP PROJECT"

	  	while true

		    #on affiche le menu
		    puts "?~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~?"
		    puts "Tu veux faire quoi jeune mouss' ?"
		    puts "0. Vider l'√©cran"
		    puts "1. Je veux cr√©er un gossip"
		    puts "2. Afficher tous les messages"
		    puts "3. Tu veux supprimer ton message"
		    puts "4. Je veux quitter l'app"
		    print "==>"
		    params = gets.chomp.to_i # on attend le choix de l'utilisateur

		    case params #en fonction du choix
		    when 0
		    	 system "clear" or system "cls"
		    when 1
		    	 puts "Tu as choisi de cr√©er un gossip"
		    	 @controller.create_gossip
		    when 2
		    	puts "Voici tous tes messages:"
		    	 @controller.index_gossips
		    when 3
		    	puts "ü§î Entrer le numero du potin que tu veux supprimer"
		    	 @controller.delete_potins
		    when 4
		    	puts "√Ä bient√¥t !"
		    	break #ce 'break' permet de sortir de la boucle while. C'est m√™me la seule fa√ßon d'en sortir.
		    else
		       puts "Ce choix n'exsiste pas, merci de ressayer"
		        # si l'utilisateur saisit une entr√©e non pr√©vue, il retourne au debut du "while true".
		        #C'est pour √ßa que la boucle est infinie: potentiellement, il peut se gaurer jusqu'√† la fin des temps:) 
		    end	
	    end
	end
end